/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-16 02:55:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.statistics;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import statistics.model.vo.Statistics;

public final class practice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("statistics.model.vo.Statistics");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	//가입경로
	String en1 = (String) request.getAttribute("en1");//지인추천
	String en2 = (String) request.getAttribute("en2");//인터넷 검색
	String en3 = (String) request.getAttribute("en3");//각종 매체광고
	String en4 = (String) request.getAttribute("en4");//기존 사용
	String en5 = (String) request.getAttribute("en5");//기타
	
	//탈퇴사유
	String del1 = (String) request.getAttribute("del1");//서비스 불만
	String del2 = (String) request.getAttribute("del2");//컨턴츠 부족
	String del3 = (String) request.getAttribute("del3");//이용 안함
	String del4 = (String) request.getAttribute("del4");//기타

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<!-- 가입 경로 원형 그래프 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\r\n");
      out.write("    google.setOnLoadCallback(drawChart1);\r\n");
      out.write("    google.setOnLoadCallback(drawChart2);\r\n");
      out.write("    \r\n");
      out.write("    function drawChart1() \r\n");
      out.write("    {\r\n");
      out.write("        var data = google.visualization.arrayToDataTable(\r\n");
      out.write("            [[\"가입경로별\",\"비율\"],[\"지인추천\",");
      out.print(en1);
      out.write("],[\"인터넷 검색\",");
      out.print(en2);
      out.write("],[\"각종매체광고\",");
      out.print(en3);
      out.write("],[\"기존사용\",");
      out.print(en4);
      out.write("],[\"기타\",");
      out.print(en5);
      out.write("]]\r\n");
      out.write("        );\r\n");
      out.write("        var options = {\r\n");
      out.write("            title: \"가입 경로 분석\"\r\n");
      out.write("        };\r\n");
      out.write("        var chart = new google.visualization.PieChart(document.getElementById(\"draw1\"));\r\n");
      out.write("        chart.draw(data, options);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 탈퇴이유 원형 그래프 -->\r\n");
      out.write("\r\n");
      out.write("    function drawChart2() \r\n");
      out.write("    {\r\n");
      out.write("        var data = google.visualization.arrayToDataTable(\r\n");
      out.write("            [[\"가입경로별\",\"비율\"],[\"서비스불만\",");
      out.print(del1);
      out.write("],[\"컨텐츠부족\",");
      out.print(del2);
      out.write("],[\"이용안함\",");
      out.print(del3);
      out.write("],[\"기타\",");
      out.print(del4);
      out.write("]]\r\n");
      out.write("        );\r\n");
      out.write("        var options = {\r\n");
      out.write("            title: \"탈퇴사유 분석\"\r\n");
      out.write("        };\r\n");
      out.write("        var chart = new google.visualization.PieChart(document.getElementById(\"draw2\"));\r\n");
      out.write("        chart.draw(data, options);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"draw1\" style=\" float: left; width: 500px; height: 500px;\"></div>\r\n");
      out.write("    <div id=\"draw2\" style=\" float: right; width: 500px; height: 500px;\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
