/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-17 23:50:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class adminMainPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/views/common/adminheader.jsp", Long.valueOf(1597648124000L));
    _jspx_dependants.put("/views/member/../../views/common/meta.jsp", Long.valueOf(1597472488000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	//가입경로
	String en1 = (String) request.getAttribute("en1");//지인추천
	String en2 = (String) request.getAttribute("en2");//인터넷 검색
	String en3 = (String) request.getAttribute("en3");//각종 매체광고
	String en4 = (String) request.getAttribute("en4");//기존 사용
	String en5 = (String) request.getAttribute("en5");//기타
	
	//탈퇴사유
	String del1 = (String) request.getAttribute("del1");//서비스 불만
	String del2 = (String) request.getAttribute("del2");//컨턴츠 부족
	String del3 = (String) request.getAttribute("del3");//이용 안함
	String del4 = (String) request.getAttribute("del4");//기타

      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>NANOONDA</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>NANOONDA</title>\r\n");
      out.write("<link href=\"/nnd/resources/css/basic.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/diarystyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/poststyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/adminstyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/themify-icons.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/nnd/resources/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/nnd/resources/js/script.js\"></script>\r\n");
      out.write("<!--탭:js-->\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 이거 있어야 됨 관리자 사이드바 두줄 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("\r\n");
      out.write("</head>");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* body {\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  font-family: Arial, Helvetica, sans-serif;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write("/* Style the content */\r\n");
      out.write(".content {\r\n");
      out.write("  background-color: #ddd;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  height: 400px; /* Should be removed. Only for demonstration */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the footer- footer 업데이트 후 삭제해야함*/\r\n");
      out.write(".footer {\r\n");
      out.write("  background-color: #f1f1f1;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<!-- 가입 경로 원형 그래프 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\r\n");
      out.write("    google.setOnLoadCallback(drawChart1);\r\n");
      out.write("    google.setOnLoadCallback(drawChart2);\r\n");
      out.write("    \r\n");
      out.write("    function drawChart1() \r\n");
      out.write("    {\r\n");
      out.write("        var data = google.visualization.arrayToDataTable(\r\n");
      out.write("            [[\"가입경로별\",\"비율\"],[\"지인추천\",");
      out.print(en1);
      out.write("],[\"인터넷 검색\",");
      out.print(en2);
      out.write("],[\"각종매체광고\",");
      out.print(en3);
      out.write("],[\"기존사용\",");
      out.print(en4);
      out.write("],[\"기타\",");
      out.print(en5);
      out.write("]]\r\n");
      out.write("        );\r\n");
      out.write("        var options = {\r\n");
      out.write("            title: \"가입 경로 분석\"\r\n");
      out.write("        };\r\n");
      out.write("        var chart = new google.visualization.PieChart(document.getElementById(\"draw1\"));\r\n");
      out.write("        chart.draw(data, options);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- 탈퇴이유 원형 그래프 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function drawChart2() \r\n");
      out.write("    {\r\n");
      out.write("        var data = google.visualization.arrayToDataTable(\r\n");
      out.write("            [[\"가입경로별\",\"비율\"],[\"서비스불만\",");
      out.print(del1);
      out.write("],[\"컨텐츠부족\",");
      out.print(del2);
      out.write("],[\"이용안함\",");
      out.print(del3);
      out.write("],[\"기타\",");
      out.print(del4);
      out.write("]]\r\n");
      out.write("        );\r\n");
      out.write("        var options = {\r\n");
      out.write("            title: \"탈퇴사유 분석\"\r\n");
      out.write("        };\r\n");
      out.write("        var chart = new google.visualization.PieChart(document.getElementById(\"draw2\"));\r\n");
      out.write("        chart.draw(data, options);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("\t\r\n");
      out.write("\t//미처리 상태인 신고글 보여주기\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : \"/nnd/rtylist.ad\", //값보낼 곳\r\n");
      out.write("\t\ttype : \"get\",\r\n");
      out.write("\t\tdataType : \"json\", //json ~ 배열과 객체 리터럴 표기법의 조합\r\n");
      out.write("\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\tconsole.log(\"success: \" + data);//확인용\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar jsonStr = JSON.stringify(data);//객체 또는 배열을 인자로 받아 JSON 문자열로 직렬화\r\n");
      out.write("\t\t\tvar json = JSON.parse(jsonStr);//string 객체를 json으로 바꿈\r\n");
      out.write("\t\t\tvar values = \"<tr><th>번호</th><th>상태</th><th>제목</th><th>신고자</th><th>신고받은자</th><th>신고일</th></tr>\";//초기화\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor ( var i in json.list) {//변수 선언만하면 0부터 1씩 증가함\r\n");
      out.write("\t\t\t\tvalues += \"<tr><td>\"     \r\n");
      out.write("\t\t\t\t\t\t+ (window.parseInt(i)+1) //번호\r\n");
      out.write("\t\t\t\t\t\t+\"</td><td> 미처리\"//상태\r\n");
      out.write("\t\t\t\t\t\t+ \"</td><td><a href='/nnd/rdetail.ad?rno=\" //제목 클릭시 상세보기로\r\n");
      out.write("\t\t\t\t\t\t+ json.list[i].no\r\n");
      out.write("\t\t\t\t\t\t+ \"'>\"\r\n");
      out.write("\t\t\t\t\t\t+ decodeURIComponent(json.list[i].title).replace(/\\+/gi, \" \") //신고제목\r\n");
      out.write("\t\t\t\t\t\t+ \"</a></td><td>\"\r\n");
      out.write("\t\t\t\t\t\t+ decodeURIComponent(json.list[i].sender).replace(/\\+/gi, \" \") //신고자\r\n");
      out.write("\t\t\t\t\t\t+\"</td><td>\"\r\n");
      out.write("\t\t\t\t\t\t+ decodeURIComponent(json.list[i].receiver).replace(/\\+/gi, \" \") //신고받은자\r\n");
      out.write("\t\t\t\t\t\t+\"</td><td>\"\r\n");
      out.write("\t\t\t\t\t\t+ json.list[i].date //신고일\r\n");
      out.write("\t\t\t\t\t\t+ \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t} //for in\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#newreport\").html($(\"newreport\").html() + values);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function(jqXHR, textstatus, errorthrown) {//에러 출력\r\n");
      out.write("\t\t\tconsole.log(\"error: \" + jqXHR + \", \" + textstatus + \", \"\r\n");
      out.write("\t\t\t\t\t+ errorthrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t \r\n");
      out.write("\t\t//답글 쓰지 않은 문의사항 최신순으로 5개 \r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"/nnd/qalarm\", //값보낼 곳\r\n");
      out.write("\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\tdataType : \"json\", //json ~ 배열과 객체 리터럴 표기법의 조합\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(\"success: \" + data);//확인용\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar jsonStr = JSON.stringify(data);//객체 또는 배열을 인자로 받아 JSON 문자열로 직렬화\r\n");
      out.write("\t\t\t\tvar json = JSON.parse(jsonStr);//string 객체를 json으로 바꿈\r\n");
      out.write("\t\t\t\tvar values = \"<tr><th>번호</th><th>제목</th><th>작성자</th><th>등록일</th></tr>\";//초기화\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tfor ( var i in json.list) {//변수 선언만하면 0부터 1씩 증가함\r\n");
      out.write("\t\t\t\t\tvalues += \"<tr><td>\"     \r\n");
      out.write("\t\t\t\t\t\t\t+ (window.parseInt(i)+1) //번호\r\n");
      out.write("\t\t\t\t\t\t\t+ \"</td><td><a href='/nnd/aqdetail?qna_no=\" //제목 클릭시 상세보기로 (**지은이꺼 확인 후 적용!)\r\n");
      out.write("\t\t\t\t\t\t\t+ json.list[i].no\r\n");
      out.write("\t\t\t\t\t\t\t+ \"'>\"\r\n");
      out.write("\t\t\t\t\t\t\t+ decodeURIComponent(json.list[i].title).replace(/\\+/gi, \" \") //문의사항제목\r\n");
      out.write("\t\t\t\t\t\t\t+ \"</a></td><td>\"\r\n");
      out.write("\t\t\t\t\t\t\t+ decodeURIComponent(json.list[i].writer).replace(/\\+/gi, \" \") //문의사항 작성자\r\n");
      out.write("\t\t\t\t\t\t\t+\"</td><td>\"\r\n");
      out.write("\t\t\t\t\t\t\t+ json.list[i].date  //문의사항 등록일\r\n");
      out.write("\t\t\t\t\t\t\t+\"</td></tr>\"\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t} //for in\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#newqna\").html($(\"newqna\").html() + values);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(jqXHR, textstatus, errorthrown) {//에러 출력\r\n");
      out.write("\t\t\t\tconsole.log(\"error: \" + jqXHR + \", \" + textstatus + \", \"\r\n");
      out.write("\t\t\t\t\t\t+ errorthrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}); \r\n");
      out.write("\t\t \r\n");
      out.write("\t\r\n");
      out.write("});\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 관리자 헤더 불러옴 -->\r\n");
      out.write('\r');
      out.write('\n');
      out.write(' ');
     
	Member loginMember = (Member)session.getAttribute("loginMember");
	                                  

      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  font-family: Arial, Helvetica, sans-serif;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the top navigation bar */\r\n");
      out.write(".topnav {\r\n");
      out.write("  \r\n");
      out.write("  /* overflow: hidden; */\r\n");
      out.write(" /*  background-color: #333; */\r\n");
      out.write(" background-color: #2a3954;\r\n");
      out.write("  text-align:center\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the topnav links */\r\n");
      out.write(".topnav a {\r\n");
      out.write("  /* float: left; */\r\n");
      out.write("  display: block;\r\n");
      out.write("  color: #f2f2f2;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  padding: 14px 16px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  width: 200px;\r\n");
      out.write("  margin-left: 600;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Change color on hover */\r\n");
      out.write(".topnav a:hover {\r\n");
      out.write("  background-color: #ddd;\r\n");
      out.write("  color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".topnav ul{\r\n");
      out.write("\t/* display:inline-block ; */\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  font-family: Arial, Helvetica, sans-serif;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the content */\r\n");
      out.write(".content {\r\n");
      out.write("  background-color: #ddd;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  height: 400px; /* Should be removed. Only for demonstration */\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("</style>\r\n");
      out.write("<title>NANOONDA</title>\r\n");
      out.write("<script>\r\n");
      out.write("var ScrollTop = 0,\r\n");
      out.write("top = 15;\r\n");
      out.write("$(window).scroll(function(event) {\r\n");
      out.write("   var st = $(this).scrollTop();\r\n");
      out.write("   if (Math.abs(ScrollTop - st) <= top) return;\r\n");
      out.write("   if ((st > ScrollTop) && (ScrollTop > 0)) {\r\n");
      out.write("      $(\".topnav\").addClass(\"on\");\r\n");
      out.write("   } else {\r\n");
      out.write("      $(\".topnav\").removeClass(\"on\");\r\n");
      out.write("   }\r\n");
      out.write("   ScrollTop = st;\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"toplogo clear\">\r\n");
      out.write("\t<!-- 현재 로고만 넣어둔 상태, 이미지로 변경해야할지 결정할 것 -->\r\n");
      out.write("\t<!-- <h1 id=\"logo\">NANOONDA</h1> -->\r\n");
      out.write("\t<div id=\"logo\">\r\n");
      out.write("\t<a href=\"/nnd/seinsert\" ><img src=\"/nnd/resources/images/admin_logo.png\" ></a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- 아이콘  -->\r\n");
      out.write("\t<div id=\"adminicon\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<p>");
      out.print(loginMember.getnName());
      out.write("님 환영합니다.</p>\r\n");
      out.write("\t\t<div id=\"logouticon\">\r\n");
      out.write("\t\t\t<a href=\"/nnd/logout\">로그아웃</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div id=\"adminmypage\">\r\n");
      out.write("\t\t\t<a href=\"/nnd/myinfo?id=");
      out.print(loginMember.getId());
      out.write("\">my page  |</a>\r\n");
      out.write("\t\t\t<a href=\"/nnd/calenderlist\">userpage</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div> <!-- 로그인 완료후 값 가져온 걸로 바꾸기 -->\r\n");
      out.write("</div>\r\n");
      out.write("<!--top 메뉴바-->\r\n");
      out.write("<div class=\"topnav\">\r\n");
      out.write("<ul>\r\n");
      out.write("\t<li><a href=\"/nnd/mlist\">회원관리</a></li>\r\n");
      out.write("\t<li><a href=\"/nnd/rlist.ad?page=1\">신고관리</a></li>\r\n");
      out.write("\t<li><a href=\"/nnd/anlist?page=1\">공지사항관리</a></li>\r\n");
      out.write("\t<li><a href=\"/nnd/aqlist\">문의사항관리</a></li>\r\n");
      out.write("\t<!-- <li><a href=\"/nnd/seinsert\">통계관리</a></li> -->\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write(" <section id=\"adminmaingrap\" class=\"clear\">\r\n");
      out.write("\t <div id=\"draw1\" ></div>\r\n");
      out.write("\t <div id=\"draw2\" ></div>\r\n");
      out.write(" </section>\r\n");
      out.write(" \r\n");
      out.write("<div id=\"adminmain\" class=\"clear\">\r\n");
      out.write("\t<!-- <h1>관리자님에 새 글이 도착했습니다</h1> -->\r\n");
      out.write("\t<section>\r\n");
      out.write("\t<!-- 미처리 신고게시글 출력-->\r\n");
      out.write("\t<div class=\"ad_list\">\r\n");
      out.write("\t\t<h4>미처리 신고게시글 <span class=\"admore\"><a href =\"/nnd/rlist.ad?page=1\">더보기</a></span></h4>\r\n");
      out.write("\t\t<table id=\"newreport\" cellspacing=\"0\" float=\"center\">\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!--문의사항 최신순으로 5개 출력  -->\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<div class=\"ad_list\">\r\n");
      out.write("\t\t<h4>미처리 문의사항 <span class=\"admore\"><a href =\"/nnd/aqlist\">더보기</a></span></h4>\r\n");
      out.write("\t\t<table id=\"newqna\" cellspacing=\"0\" float=\"center\">\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
