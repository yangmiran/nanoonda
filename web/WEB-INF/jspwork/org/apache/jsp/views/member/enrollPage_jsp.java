/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-17 04:51:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class enrollPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/member/../../views/common/meta.jsp", Long.valueOf(1597472488000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>NANOONDA_SIGNUP</title>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>NANOONDA</title>\r\n");
      out.write("<link href=\"/nnd/resources/css/basic.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/diarystyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/poststyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/adminstyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"/nnd/resources/css/themify-icons.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/nnd/resources/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/nnd/resources/js/script.js\"></script>\r\n");
      out.write("<!--탭:js-->\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 이거 있어야 됨 관리자 사이드바 두줄 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("\r\n");
      out.write("</head>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t//패스워드 확인\r\n");
      out.write("\tfunction validate(){\r\n");
      out.write("\t\tvar pwdValue = document.getElementById(\"pwd\").value;\r\n");
      out.write("\t\tvar pwdCkValue = document.getElementById(\"pwdck\").value;\r\n");
      out.write("\t\tif(pwdValue !== pwdCkValue){\r\n");
      out.write("\t\t\talert(\"암호의 값이 일치하지 않습니다.\");\r\n");
      out.write("\t\t\tdocument.getElementById(\"pwd\").select();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//아이디 중복 체크 확인\r\n");
      out.write("\tfunction dupIdCheck(){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"/nnd/idchk\",\r\n");
      out.write("\t\t\ttype:\"post\",\r\n");
      out.write("\t\t\tdata: {id: $(\"#id\").val()},\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\tif(data == \"ok\"){\r\n");
      out.write("\t\t\t\t\talert(\"사용 가능한 아이디입니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#nname\").focus();\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"이미 사용중인 아이디입니다.\\n다시 입력하세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#id\").select();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHP, textstatus, errorthrown){\r\n");
      out.write("\t\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus + \", \" + errorthrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//닉네임 중복체크\r\n");
      out.write("\tfunction nnameCheck(){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"/nnd/nnchk\",\r\n");
      out.write("\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\tdata: {nname: $(\"#nname\").val()},\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\tif(data == \"ok\"){\r\n");
      out.write("\t\t\t\t\talert(\"사용 가능한 닉네임입니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pwd\").focus();\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"이미 사용중인 닉네임입니다.\\n다시 입력하세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#nname\").select();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHP, textstatus, errorthrown){\r\n");
      out.write("\t\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus + \", \" + errorthrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//이메일 중복체크\r\n");
      out.write("\t/* function emailCheck(){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"/nnd/emaildateCk\",\r\n");
      out.write("\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\tdata: {email: $(\"#email\").val()},\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\tif(data == \"ook\"){\r\n");
      out.write("\t\t\t\t\talert(\"가입 가능한 이메일입니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#email\").focus();\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"이미 사용중인 이메일입니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHP, textstatus, errorthrown){\r\n");
      out.write("\t\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus + \", \" + errorthrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} */\r\n");
      out.write("\t\r\n");
      out.write("\tfunction resetCheck(){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"/nnd/enrolleset\",\r\n");
      out.write("\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\tdata: {resetpass: $(\"#resetpass\").val()},\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\tif(data == \"enok\"){\r\n");
      out.write("\t\t\t\t\talert(\"인증번호가 틀렸습니다. 다시 입력해주세요\");\r\n");
      out.write("\t\t\t\t\t$(\"#resetpass\").focus();\r\n");
      out.write("\t\t\t\t\t$('.byenrollok').attr(\"type\", \"button\");\r\n");
      out.write("\t\t\t\t\t$('.byenrollok').prop('disabled', true);\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"인증되었습니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#resetpass\").focus();\r\n");
      out.write("\t\t\t\t\t$('.byenrollok').attr(\"type\", \"submit\");\r\n");
      out.write("\t\t\t\t\t$('.byenrollok').prop('disabled', false);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHP, textstatus, errorthrown){\r\n");
      out.write("\t\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus + \", \" + errorthrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/* function emailSend(){\r\n");
      out.write("\t\tlet clientEmail = ducument.getElementById('emailText').value;\r\n");
      out.write("\t\tlet emailYn = isEmail(clientEmail);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tclosole.log('입력 이메일' + clientEmail);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(emailYn == true){\r\n");
      out.write("\t\t\talert(\"이메일 형식입니다.\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"post\",\r\n");
      out.write("\t\t\t\turl:\"/nnd/member/email\",\r\n");
      out.write("\t\t\t\tdata:{userEmail:clientEmail},\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},error:function(e){\r\n");
      out.write("\t\t\t\t\talert('오류입니다. 잠시 후 다시 시도해주세요');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert('이메일 형식에 알맞게 입력해주세요 xxx@xxx.com');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction isEmail(asValue){\r\n");
      out.write("\t\tvar regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("\t\treturn regExp.test(asValue);\r\n");
      out.write("\t} */\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\" class=\"enrollpage\">\r\n");
      out.write("\t\t<!-- enrollpage_in:s -->\r\n");
      out.write("\t\t<div class=\"enrollpage_in\">\r\n");
      out.write("\t\t\t<div class=\"title\">\r\n");
      out.write("\t\t\t\t<span class=\"tit_logo\"><a href=\"/nnd/index.jsp\"><img src=\"/nnd/resources/images/logofix.png\"></a></span>\r\n");
      out.write("\t\t\t\t<h1>나눈다 회원가입을 시작합니다!</h1>\r\n");
      out.write("\t\t\t\t<p>이메일 인증을 해주셔야 가입이 가능합니다.<br>인증을 꼭 해주세요</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<form method=\"post\" action=\"/nnd/minsert\" onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t\t<table id=\"outer\" align=\"center\" width=\"500\" cellspacing=\"5\" cellpadding=\"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>아이디</th>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"id\" id=\"id\" required autofocus> &nbsp;\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"중복체크\" onclick=\"return dupIdCheck();\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>닉네임</th>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"nname\" id=\"nname\" required> &nbsp;\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"중복체크\" onclick=\"return nnameCheck();\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>암 호</th>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" name=\"pwd\" id=\"pwd\" required></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>암호확인</th>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" id=\"pwdck\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>이메일</th>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"emailcklist\">\r\n");
      out.write("\t\t\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" name=\"email\" id=\"email\" placeholder=\"가입할 이메일을 다시 입력해주세요.\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- <input type=\"button\" value=\"중복체크\" onclick=\"return emailCheck();\"></td> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"resetpass\" placeholder=\"인증번호를 입력해주세요\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" onclick=\"return resetCheck()\" value='인증확인'>\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t            \t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<!-- <button type=\"submit\" id=\"emailCheck\">인증번호받기</button> -->\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr class=\"enrolljoin\">\r\n");
      out.write("\t\t\t\t\t<th>가입경로</th>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<select name=\"sellist\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">지인추천</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2\">인터넷검색</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"3\">각종매체광고</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"4\">기존사용</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"5\">기타</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"byenrollok\" type=\"button\"disabled>가입하기</button>\r\n");
      out.write("\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- <div class=\"social_login\">\r\n");
      out.write("\t\t\t\t<div class=\"list\">\r\n");
      out.write("\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t<li><div class=\"icon google\"></div></li>\r\n");
      out.write("\t\t\t\t\t\t<li><div class=\"icon face\"></div></li>\r\n");
      out.write("\t\t\t\t\t\t<li><div class=\"icon naver\"></div></li>\r\n");
      out.write("\t\t\t\t\t\t<li><div class=\"icon kaka\"></div></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div> -->\r\n");
      out.write("\t\t\t<span class=\"copyright\">© <strong>NANOONDA Communications</strong></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- enrollpage_in:e -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
